require("@rushstack/eslint-patch/modern-module-resolution")

module.exports = {
    root: true,
    env: {
        node: true,
    },
    "extends": [
        "./.eslintrc-auto-import.json",
        "plugin:vue/vue3-essential",
        "plugin:vue/base",
        "eslint:recommended",
        "@vue/eslint-config-typescript",
        "@vue/eslint-config-prettier/skip-formatting"
    ],
    rules: {
        semi: ["error", "never"],
        "prettier/prettier": [
            "error",
            {
                endOfLine: "auto",
                semi: false,
            },
        ],
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": "off",//["error", {"varsIgnorePattern": "^_", "argsIgnorePattern": "^_"}],
        "vue/script-setup-uses-vars": "error",
        "vue/attribute - hyphenation": "off",
        "vue/require-default-prop": "off",
        "vue/multiline-html-element-content-newline": "off",
        "vue/singleline-html-element-content-newline": "off",
        "vue/custom-event-name-casing": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
    },
    parserOptions: {
        ecmaVersion: "latest"
    },
    globals: {
        window: true,
        module: true,
        require: true,
        defineProps: "readonly",
        defineExpose: "readonly",
        defineEmits: "readonly",
        useSlots: "readonly",
        withDefaults: "readonly",
        computed: "readonly",
        reactive: "readonly",
        ref: "readonly",
        toRefs: "readonly",
        unref: "readonly",
        watch: "readonly",
        watchEffect: "readonly",
        inject: "readonly",
        provide: "readonly",
        onMounted: "readonly",
        onBeforeMount: "readonly",
        onUnmounted: "readonly",
        Ref: "readonly",
        MaybeRef: "readonly",
        PropType: "readonly",
        FilterQuery: "readonly",
        Nullable: "readonly",
        FormValidation: "readonly",
        SelectRef: "readonly",
        InputRef: "readonly",
        ComputedRef: "readonly",
        GetOneInput: "readonly",
        GetManyInput: "readonly",
        GetManyInputCursor: "readonly",
        Pagination: "readonly",
        PaginationCursor: "readonly",
        PaginationInput: "readonly",
        TableModal: "readonly",
        Fn: "readonly",
        SRecord: "readonly",
        log: "readonly",
    },
    overrides: [
        {
            files: ["**/*.cjs"],
            env: {
                node: true,
                amd: true,
            },
        },
    ],
}
